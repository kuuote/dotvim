[[plugins]]
repo = 'MunifTanjim/nui.nvim'

[[plugins]]
repo = 'kuuote/tsnip.nvim'
rev = 'monster'

[[plugins]]
repo = 'lewis6991/impatient.nvim'

[[plugins]]
repo = 'milisims/nvim-luaref'

[[plugins]]
repo = 'monaqa/dial.nvim'
hook_add = '''
" from help
nmap <C-a> <Plug>(dial-increment)
nmap <C-x> <Plug>(dial-decrement)
vmap <C-a> <Plug>(dial-increment)
vmap <C-x> <Plug>(dial-decrement)
vmap g<C-a> <Plug>(dial-increment-additional)
vmap g<C-x> <Plug>(dial-decrement-additional)
'''

[[plugins]]
repo = 'nanotee/luv-vimdocs'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'nvim-lua/popup.nvim'

[[plugins]]
repo = 'nvim-telescope/telescope-ui-select.nvim'
on_lua = 'telescope'
lua_add = '''
vim.ui.select = function(items, opts, on_choice)
	require("telescope").load_extension("ui-select")
  vim.ui.select(items, opts, on_choice)
end
'''

[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
# depends = ['telescope-ui-select.nvim']
on_cmd = 'Telescope'
on_lua = 'telescope'

[[plugins]]
repo = 'rcarriga/nvim-notify'

[[plugins]]
repo = 'skanehira/jumpcursor.vim'
on_map = '<Plug>'
hook_add = '''
nmap [j <Plug>(jumpcursor-jump)
'''

[[plugins]]
repo = 'tamago324/lir.nvim'
lua_source = '''
local actions = require('lir.actions')

require('lir').setup({
  show_hidden_files = true,
  mappings = {
    ['f'] = function()
      vim.call('vimrc#fzf#ff#run')
    end,
    ['l'] = actions.edit,
    ['<C-s>'] = actions.split,
    ['<C-v>'] = actions.vsplit,
    ['<C-t>'] = actions.tabedit,

    ['h'] = actions.up,
    ['q'] = actions.quit,

    ['K'] = actions.mkdir,
    ['N'] = actions.newfile,
    ['R'] = actions.rename,
    ['@'] = actions.cd,
    ['Y'] = actions.yank_path,
    ['.'] = actions.toggle_show_hidden,
  },
})
'''

[[plugins]]
repo = 'vim-skk/eskk.vim'
lua_add = '''
-- use dotfiles dictionary
vim.g['eskk#dictionary'] = { path = vim.env.HOME .. '/.vim/tmp/.skk-jisyo' }
vim.g['eskk#large_dictionary'] = {
  path = vim.env.HOME .. '/.vim/tmp/.skk-jisyo',
  sorted = true,
  encoding = 'euc-jp',
}

-- improve eskk enabler
-- see https://thinca.hatenablog.com/entry/20120716/1342374586
-- inoremap <expr> <script> f getline('.')[col('.') - 2] ==# 'j' ? "\<BS>" .. eskk#enable() : 'f'
vim.call('hypermap#map', 'zj', 'eskk#enable()', { eval = true })

vim.api.nvim_create_autocmd('User', {
  pattern = 'eskk-enable-post',
  callback = function()
    vim.keymap.set('l', 'l', '<Plug>(eskk:disable)', {
      buffer = vim.fn.bufnr(),
    })
  end,
})
'''
hook_add = '''
"register alphabet table
function! s:eskk_initialize_pre()
  let t = eskk#table#new('rom_to_hira*', 'rom_to_hira')
  call t.add_map('z ', 'ã€€')
  call eskk#register_mode_table('hira', t)
endfunction

augroup vimrc
  autocmd User eskk-initialize-pre call s:eskk_initialize_pre()
augroup END
'''
