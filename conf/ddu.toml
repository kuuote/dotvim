[[plugins]]
repo = 'Shougo/ddu-kind-file'

[[plugins]]
repo = 'Shougo/ddu-kind-word'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'

[[plugins]]
repo = 'Shougo/ddu-source-line'

[[plugins]]
repo = 'Shougo/ddu-ui-ff'
hook_add = '''
au BufEnter ddu-ff-* if &ft !=# 'ddu-ff-filter' | call timer_start(0, {->execute('0')}) | endif
" au BufEnter ddu-ff-filter call deletebufline('%', 1, '$')
autocmd FileType ddu-ff call s:ddu_ff_common_mapping()
function! s:ddu_ff_common_mapping() abort
  " copy from doc
  nnoremap <buffer> <nowait> <CR>
  \ <Cmd>call ddu#ui#ff#do_action('itemAction')<CR>
  nnoremap <buffer> <nowait> <Space>
  \ <Cmd>call ddu#ui#ff#do_action('toggleSelectItem')<CR>
  nnoremap <buffer> <nowait> i
  \ <Cmd>call ddu#ui#ff#do_action('openFilterWindow')<CR>
  nnoremap <buffer> <nowait> q
  \ <Cmd>call ddu#ui#ff#do_action('quit')<CR>
endfunction

autocmd BufEnter ddu-ff-file call s:ddu_ff_file_mapping()
function! s:ddu_ff_file_mapping() abort
  nnoremap <buffer> <nowait> t
  \ <Cmd>call ddu#ui#ff#do_action('itemAction', {'action': 'open', 'params': {'command': 'tabedit'}})<CR>
endfunction

autocmd FileType ddu-ff-filter call s:ddu_filter_my_settings()
function! s:ddu_filter_my_settings() abort
  inoremap <buffer><silent> <CR>
  \ <Esc><Cmd>close<CR>
  nnoremap <buffer><silent> <CR>
  \ <Cmd>close<CR>
  inoremap <buffer> <C-j>
  \ <Cmd>call ddu#ui#ff#execute("call cursor(line('.')+1,0)")<CR>
  inoremap <buffer> <C-k>
  \ <Cmd>call ddu#ui#ff#execute("call cursor(line('.')-1,0)")<CR>
endfunction
'''

[[plugins]]
repo = 'Shougo/ddu.vim'
hook_source = '''

call ddu#custom#alias('filter', 'matcher_fzf_nosort', 'matcher_fzf')

call ddu#custom#patch_global({
\   'filterParams': {
\     'matcher_fzf_nosort': {
\       'sort': v:false,
\     },
\   },
\   'kindOptions': {
\     'command': {
\       'defaultAction': 'execute',
\     },
\     'file': {
\       'defaultAction': 'open',
\     },
\     'help': {
\       'defaultAction': 'tabopen',
\     },
\     'word': {
\       'defaultAction': 'append',
\     },
\     'dein_update': {
\       'defaultAction': 'viewDiff',
\     },
\   },
\   'sourceOptions': {
\     '_': {
\       'ignoreCase': v:true,
\       'matchers': ['matcher_fzf'],
\     },
\     'dein_update': {
\       'matchers': ['matcher_dein_update'],
\     },
\     'mr': {
\       'matchers': ['matcher_fzf_nosort'],
\     },
\   },
\   'ui': 'ff',
\   'uiParams': {
\     'ff': {
\       'floatingBorder': ['.', '.', '.', ':', ':', '.', ':', ':']->map('[v:val, "String"]'),
\       'highlights': {
\         'floating': 'NormalFloat:None',
\       },
\       'split': has('nvim') ? 'floating' : 'horizontal',
\     },
\   },
\ })
'''

[[plugins]]
repo = 'kuuote/ddu-filter-fuse'

[[plugins]]
repo = 'kuuote/ddu-source-mr'
hook_add = '''
nnoremap mru <Cmd>call ddu#start({'name': 'file', 'sources': [{'name': 'mr'}]})<CR>
nnoremap mrw <Cmd>call ddu#start({'name': 'file', 'sources': [{'name': 'mr', 'params': {'kind': 'mrw'}}]})<CR>
nnoremap mrr <Cmd>call ddu#start({'name': 'file', 'sources': [{'name': 'mr', 'params': {'kind': 'mrr'}}]})<CR>
'''

[[plugins]]
repo = 'matsui54/ddu-source-dein_update'
hook_add = '''
command! DduDeinUpdate call ddu#start({'sources': [{'name': 'dein_update'}]})
'''

[[plugins]]
repo = 'matsui54/ddu-source-help'

[[plugins]]
repo = 'shun/ddu-rg'
hook_add = '''
" from help
command! DduRgLive call <SID>ddu_rg_live()
function! s:ddu_rg_live() abort
  call ddu#start({
        \   'volatile': v:true,
        \   'sources': [{
        \     'name': 'rg',
        \     'options': {'matchers': []},
        \   }],
        \   'uiParams': {'ff': {
        \     'ignoreEmpty': v:false,
        \     'autoResize': v:false,
        \   }},
        \ })
endfunction
'''

[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'
