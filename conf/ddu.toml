[[plugins]]
repo = '4513echo/ddu-source-source'
hook_add = '''
command! DduSourceSource call ddu#start({'sources': [{'name': 'source'}]})
'''

[[plugins]]
repo = 'Shougo/ddu-kind-file'

[[plugins]]
repo = 'Shougo/ddu-kind-word'

[[plugins]]
repo = 'Shougo/ddu-source-file'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'
hook_add = '''
nnoremap <C-p> <Cmd>call ddu#start({"name": "file", "sources": [{"name": "file_rec"}]})<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-source-line'

[[plugins]]
repo = 'Shougo/ddu-ui-ff'
hook_add = '''
autocmd FileType ddu-ff call s:ddu_ff_common_mapping()
function! s:ddu_ff_common_mapping() abort
  " copy from doc
  nnoremap <buffer> <nowait> <CR>
  \ <Cmd>call ddu#ui#ff#do_action('itemAction')<CR>
  nnoremap <buffer> <nowait> <Space>
  \ <Cmd>call ddu#ui#ff#do_action('toggleSelectItem')<CR>
  nnoremap <buffer> <nowait> i
  \ <Cmd>call ddu#ui#ff#do_action('openFilterWindow')<CR>
  nnoremap <buffer> <nowait> p
  \ <Cmd>call ddu#ui#ff#do_action('preview')<CR>
  nnoremap <buffer> <nowait> q
  \ <Cmd>call ddu#ui#ff#do_action('quit')<CR>
  if b:ddu_ui_name ==# 'file'
    nnoremap <buffer> <nowait> t
    \ <Cmd>call ddu#ui#ff#do_action('itemAction', {'action': 'open', 'params': {'command': 'tabedit'}})<CR>
    nnoremap <buffer> <nowait> s
    \ <Cmd>call ddu#ui#ff#do_action('itemAction', {'action': 'open', 'params': {'command': 'split'}})<CR>
    nnoremap <buffer> <nowait> v
    \ <Cmd>call ddu#ui#ff#do_action('itemAction', {'action': 'open', 'params': {'command': 'vsplit'}})<CR>
  endif
endfunction

autocmd FileType ddu-ff-filter call s:ddu_filter_my_settings()
function! s:ddu_filter_my_settings() abort
  inoremap <buffer><silent> <CR>
  \ <Esc><Cmd>call ddu#ui#ff#close()<CR>
  nnoremap <buffer><silent> <CR>
  \ <Esc><Cmd>call ddui#ui#ff#close()<CR>
  inoremap <buffer> <C-j>
  \ <Cmd>call ddu#ui#ff#execute("call cursor(line('.')+1,0)")<CR><Cmd>redraw!<CR>
  inoremap <buffer> <C-k>
  \ <Cmd>call ddu#ui#ff#execute("call cursor(line('.')-1,0)")<CR><Cmd>redraw!<CR>

  " for fzf and jis keyboard
  inoremap <buffer> : '
endfunction
'''

[[plugins]]
repo = 'Shougo/ddu.vim'
hook_source = '''
source ~/.vim/conf/plug/ddu.vim
'''

[[plugins]]
repo = 'kuuote/ddu-filter-fuse'

[[plugins]]
repo = 'kuuote/ddu-source-mr'
hook_add = '''
nnoremap mru <Cmd>call ddu#start({'name': 'file', 'sources': [{'name': 'mr'}]})<CR>
nnoremap mrw <Cmd>call ddu#start({'name': 'file', 'sources': [{'name': 'mr', 'params': {'kind': 'mrw'}}]})<CR>
nnoremap mrr <Cmd>call ddu#start({'name': 'file', 'sources': [{'name': 'mr', 'params': {'kind': 'mrr'}}]})<CR>
'''

[[plugins]]
repo = 'matsui54/ddu-source-dein_update'
hook_add = '''
command! DduDeinUpdate call ddu#start({'sources': [{'name': 'dein_update'}]})
'''

[[plugins]]
repo = 'matsui54/ddu-source-help'
hook_add = '''
nnoremap <Space>h <Cmd>call ddu#start({'sources': [{'name': 'help'}]})<CR>
'''

[[plugins]]
repo = 'shun/ddu-rg'
hook_add = '''
" from help
command! DduRgLive call <SID>ddu_rg_live()
function! s:ddu_rg_live() abort
  call ddu#start({
        \   'volatile': v:true,
        \   'sources': [{
        \     'name': 'rg',
        \     'options': {'matchers': []},
        \   }],
        \   'uiParams': {'ff': {
        \     'ignoreEmpty': v:false,
        \     'autoResize': v:false,
        \   }},
        \ })
endfunction
'''

[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'
