[[plugins]]
comment = 'dial.nvimを使っている'
repo = 'monaqa/dps-dial.vim'
hook_add = '''
nmap  <C-a>  <Plug>(dps-dial-increment)
nmap  <C-x>  <Plug>(dps-dial-decrement)
xmap  <C-a>  <Plug>(dps-dial-increment)
xmap  <C-x>  <Plug>(dps-dial-decrement)
xmap g<C-a> g<Plug>(dps-dial-increment)
xmap g<C-x> g<Plug>(dps-dial-decrement)
'''

[[plugins]]
comment = 'ほぼdein.vim自身のdduソースで賄える'
repo = '4513ECHO/vim-readme-viewer'
on_source = 'ddu.vim'
hook_source = '''
" 指定していないと死ぬ
let g:readme_viewer#plugin_manager = 'dein.vim'
'''

[[plugins]]
comment = '''
nvimの方がVim対応したのでif_lua前提のうちの.vimだと使える
'''
repo = 'catppuccin/vim'
name = 'catppuccin-vim'
if = 'v:false && !has("nvim")'

[[plugins]]
comment = 'そういやこれも本体に入ったんだった'
repo = 'nanotee/luv-vimdocs'

[[plugins]]
comment = '本体に入ったので'
repo = 'cespare/vim-toml'
hook_add = '''
function! s:dein_toml_syntax() abort
  if expand('%:p') =~# '\vconf/[^/]+.toml$'
    call dein#toml#syntax()
  endif
endfunction
autocmd FileType toml ++nested call timer_start(0, {id->s:dein_toml_syntax()})
'''

[[plugins]]
comment = 'gin.vimの物を使うので'
repo = 'itchyny/vim-gitbranch'

[[plugins]]
comment = 'cmdwinの絞り込みしか使ってない'
repo = 'kuuote/vim-fuzzyhistory'
hook_add = '''
nmap <C-f> <Plug>(fuzzy-history)
'''

[[plugins]]
comment = '''
ddu-source-mr使ってるので
'''
repo = 'lambdalisue/mr-quickfix.vim'

[[__plugins__]]
comment = '''
いまいち合わなかった
特定の位置に飛びたいケースがそんなにない
  あまり管理したくない
もっといい単位があるかもしれないので考えていきたい
'''
repo = 'MattesGroeger/vim-bookmarks'
hook_add = '''
let g:bookmark_no_default_key_mappings = 1
nmap mm <Plug>BookmarkToggle
nmap mx <Plug>BookmarkClearAll
nmap mf <Cmd>FzfPreviewBookmarksRpc<CR>

let g:bookmark_save_per_working_dir = 1
call mkdir('/tmp/bookmarks', 'p')
function! BMWorkDirFileLocation() abort
  let root = system('git rev-parse --show-toplevel')
  if v:shell_error
    let root = getcwd()
  endif
  let root = substitute(root, '/', '@', 'g')
  return '/tmp/bookmarks/' .. root
endfunction
'''

[[plugins]]
comment = '本体に入ったので'
repo = 'milisims/nvim-luaref'

[[plugins]]
comment = 'vim.ui.selectの仕様の1つに準拠していないため。dressing.nvimで置き換えられるため削除'
repo = 'nvim-telescope/telescope-ui-select.nvim'
if = 'g:vim_ui_select ==# "telescope.nvim"'
on_lua = 'telescope'
lua_add = '''
vim.ui.select = function(items, opts, on_choice)
  local telescope = require('telescope')
  telescope.setup {
    extensions = {
      ['ui-select'] = {
        require('telescope.themes').get_dropdown {},
      },
    },
  }
  telescope.load_extension('ui-select')
  vim.ui.select(items, opts, on_choice)
end
'''

[[plugins]]
comment = '消えた。悲しい'
repo = 'ulwlu/elly.vim'

[[plugins]]
comment = '''
ddudeinupdateを使うようになったので
'''
repo = 'wsdjeg/dein-ui.vim'
hook_add = '''
autocmd FileType SpaceVimPlugManager autocmd TextChanged <buffer> normal! G
'''

[[plugins]]
comment = '自分の作業スタイルと根本から合ってない気がする'
repo = 'c000/rapidfire.vim'
on_cmd = 'Rapidfire'
lua_add = '''
local m = require('vimrc.compat.map').define
for i = 1, 9 do
  m('n', '<CR>' .. i, '<Cmd>Rapidfire ' .. i .. '<CR>')
end
'''

