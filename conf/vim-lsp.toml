[[plugins]]
if = 'v:false'
repo = 'matsui54/denops-signature_help'
hook_source = '''
let g:signature_help_config = {
\   'style': 'virtual',
\ }
call signature_help#enable()
" disable vim-lsp's signature help
let g:lsp_signature_help_enabled = 0
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
" さすまつ https://mattn.kaoriya.net/software/vim/20191231213507.htm

function! s:on_lsp_buffer_enabled() abort
  setlocal omnifunc=lsp#complete
  setlocal signcolumn=yes
  nmap <buffer> gd <Plug>(lsp-definition)
  nmap <buffer> K <Plug>(lsp-hover)
  " using m prefix
  " idea from https://github.com/yuki-yano/dotfiles/blob/7f10462d12228f57ea3cf86d61f3b22d4728b6f1/.vimrc#L1504
  nnoremap <buffer> ma <Cmd>LspCodeActionSync<CR>
  nnoremap <buffer> mf <Cmd>LspDocumentFormatSync<CR>
  nnoremap <buffer> mrn <Cmd>LspRename<CR>
endfunction

augroup vimrc
  autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END

let g:lsp_diagnostics_enabled = 1
let g:lsp_diagnostics_echo_cursor = 1
let g:asyncomplete_auto_popup = 1
let g:asyncomplete_auto_completeopt = 1
let g:asyncomplete_popup_delay = 200
let g:lsp_text_edit_enabled = 1

command! LspDebug let lsp_log_verbose=1 | let lsp_log_file = expand('~/lsp.log')
'''

[[plugins]]
repo = 'shun/ddc-vim-lsp'
on_if = 'dein#is_available("ddc.vim")'
hook_add = '''

function! s:setup_ddc_vim_lsp() abort
  let sources = g:vimrc#ddc_sources_front + ['vim-lsp'] + g:vimrc#ddc_sources
  call ddc#custom#patch_filetype([
  \ 'go',
  \ 'rust',
  \ 'typescript',
  \ 'typescriptreact',
  \ ], 'sources', sources)
endfunction
autocmd User vimrc-ddc call s:setup_ddc_vim_lsp()
'''

